version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: stock_analysis_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: stock_analysis
      MYSQL_USER: stockuser
      MYSQL_PASSWORD: stockpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - stock_network
    command: --default-authentication-plugin=mysql_native_password

  # 后端 FastAPI 服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock_analysis_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    environment:
      - DATABASE_URL=mysql+pymysql://root:root123@mysql:3306/stock_analysis
      - DEBUG=True
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    networks:
      - stock_network

  # 前端 React 服务 (管理端)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock_analysis_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - stock_network

  # 客户端 React 服务 (用户端)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: stock_analysis_client
    restart: unless-stopped
    ports:
      - "8006:8006"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - stock_network

  # Nginx 反向代理 (可选，生产环境使用)
  nginx:
    image: nginx:alpine
    container_name: stock_analysis_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - client
      - backend
    networks:
      - stock_network
    profiles:
      - production

# 网络配置
networks:
  stock_network:
    driver: bridge

# 数据卷配置
volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local